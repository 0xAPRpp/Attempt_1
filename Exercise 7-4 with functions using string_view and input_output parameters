# include <iostream>
# include <string_view>
# include <string>
# include <string_view>
# include <vector>

//prototype
void space_deleter(std::string_view text1, std::string& texta);
bool anagram_check(std::string_view a1, std::string_view a2);

int main()
{
	std::string text1{}, text2{};
	std::string texta{}, textb{};

	std::getline(std::cin, text1);
	std::getline(std::cin, text2);

	space_deleter(text1, texta);
	
	space_deleter(text2, textb);	
	

	

	std::cout << text1 << " and " << text2 << " anagrams: " << std::boolalpha << anagram_check(texta, textb) << std::endl;

	system("pause");
	return 0;
}

void space_deleter(std::string_view text1, std::string& texta)
{
	texta = text1;

	for (size_t i{}; i < texta.length();)
	{
		if (isspace(texta[i]))
		{
			texta.erase(i, 1);
			continue;
		}
		else
			i++;
	}
}

bool anagram_check(std::string_view a1, std::string_view a2)
{
	std::string text1{}, text2{};
	text1 = a1;
	text2 = a2;

	if (text1.length() != text2.length())
		return false;
	else
	{
		
		for (size_t i{}; i < text2.length(); i++)
		{
			if (text1[0] == text2[i])
			{
				text1.erase(0, 1);
				text2.erase(i, 1);
			}
		}
		if (text1 == text2)
			return true;
	}

}
